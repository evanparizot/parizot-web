version: 2.1

orbs:
  cypress: cypress-io/cypress@1

workflows:
  version: 2.1
  pipeline:
    jobs:
      - build
      - cypress/run:
          start: npm start
          wait-on: 'http://localhost:4200'
          post-steps:
            - store_test_results:
                path: cypress/results
          requires: [ 'build' ]

      - push_to_gcs_staging:
          context: gcp-storage-parizot
          requires: [ 'cypress/run' ]

      - hold:
          type: 'approval'
          requires: [ 'push_to_gcs_staging' ]

      - push_to_gcs_prod:
          context: gcp-storage-parizot
          requires: ['hold']

jobs:
  build:
    docker:
      - image: circleci/node:10.16.0-browsers
    working_directory: '~/project'
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: npm run build -- --configuration=staging --output-path=dist/staging --progress=false
      - run: npm run build -- --configuration=production --output-path=dist/prod --progress=false
      - persist_to_workspace:
          root: '~/project'
          paths:
            - dist/staging
            - dist/prod

  push_to_gcs_staging:
    docker:
      - image: google/cloud-sdk
    steps:
      - attach_workspace:
          at: ~/project
      - run: |
          echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      - run: find . -type f -follow -print
      - run: gsutil -m rm -r gs://staging.evanparizot.com/**
      - run: gsutil -m cp -r dist/staging/** gs://staging.evanparizot.com/

  push_to_gcs_prod:
    docker:
      - image: google/cloud-sdk
    steps:
      - attach_workspace:
          at: ~/project
      - run: |
          echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      - run: find . -type f -follow -print
      - run: gsutil -m rm -r gs://evanparizot.com/** 
      - run: gsutil -m cp -r dist/prod/** gs://evanparizot.com/
